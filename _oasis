Name: VyConf
Version: 0.1
Synopsis: Appliance configuration framework
Authors: VyOS maintainers <maintainers@vyos.net>
License: LGPL with OCaml linking exception

Description: VyConf
Homepage: http://vyos.net

OASISFormat: 0.4
BuildTools: ocamlbuild
Plugins: META (0.4), DevFiles (0.4)

Library "vyconf"
  Path: src
  Modules: Vytree, Config_tree, Reference_tree, Curly_parser

Library "vyconf-client"
  Path: src
  Modules: Vyconf_client, Vyconf_config
  FindlibParent: vyconf

Executable "vyconfd"
  Path: src
  MainIs: vyconfd.ml
  CompiledObject: best
  BuildDepends: ppx_deriving_yojson, ppx_deriving.show, lwt, lwt.unix, lwt.ppx, pcre,
                xml-light, toml, fileutils, ocaml-protoc, ocplib-endian, sha

Executable "vytree_test"
  Path: test
  MainIs: vytree_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, ppx_deriving_yojson

Executable "reference_tree_test"
  Path: test
  MainIs: reference_tree_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, ppx_deriving_yojson, xml-light, pcre, fileutils

Executable "config_tree_test"
  Path: test
  MainIs: config_tree_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, ppx_deriving_yojson

Executable "vylist_test"
  Path: test
  MainIs: vylist_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends:  oUnit

Executable "value_checker_test"
  Path: test
  MainIs: value_checker_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends:  oUnit, pcre, fileutils

Executable "util_test"
  Path: test
  MainIs: util_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, vyconf, xml-light, fileutils

Executable "vyconf_config_test"
  Path: test
  MainIs: vyconf_config_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends:  oUnit, toml, ppx_deriving.runtime, fileutils

Executable "curly_parser_test"
  Path: test
  MainIs: curly_parser_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, ppx_deriving_yojson

Executable "session_test"
  Path: test
  MainIs: session_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: oUnit, ppx_deriving_yojson, xml-light, fileutils, pcre, toml

Executable "vytree_load_test"
  Path: test
  MainIs: vytree_load_test.ml
  Build$: flag(tests)
  CompiledObject: best
  Install: false
  BuildDepends: ppx_deriving_yojson

Test "vytree_test"
  Run$: flag(tests)
  TestTools: vytree_test
  Command: $vytree_test
  WorkingDirectory: test

Test "reference_tree_test"
  Run$: flag(tests)
  TestTools: reference_tree_test
  Command: $reference_tree_test
  WorkingDirectory: test

Test "config_tree_test"
  Run$: flag(tests)
  TestTools: config_tree_test
  Command: $config_tree_test
  WorkingDirectory: test

Test "vylist_test"
  Run$: flag(tests)
  TestTools: vylist_test
  Command: $vylist_test
  WorkingDirectory: test

Test "value_checker_test"
  Run$: flag(tests)
  TestTools: value_checker_test
  Command: $value_checker_test
  WorkingDirectory: test

Test "vyconf_config_test"
  Run$: flag(tests)
  TestTools: vyconf_config_test
  Command: $vyconf_config_test
  WorkingDirectory: test

Test "curly_parser_test"
  Run$: flag(tests)
  TestTools: curly_parser_test
  Command: $curly_parser_test
  WorkingDirectory: test

Test "util_test"
  Run$: flag(tests)
  TestTools: util_test
  Command: $util_test
  WorkingDirectory: test

Test "session_test"
  Run$: flag(tests)
  TestTools: session_test
  Command: $session_test
  WorkingDirectory: test

